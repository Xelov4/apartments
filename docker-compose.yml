version: '3.8'

services:
  # Service de base de données MariaDB
  mariadb:
    build:
      context: ./mariadb
      dockerfile: Dockerfile
    container_name: video-ia-mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: Europe/Paris
    volumes:
      - db_data:/var/lib/mysql
      - ./mariadb/conf:/etc/mysql/conf.d
      - ./mariadb/init:/docker-entrypoint-initdb.d
    networks:
      - video_ia_network
    ports:
      - "127.0.0.1:3306:3306"  # Exposition locale uniquement pour debug
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--user=root", "--password=${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Service Next.js pour l'application frontend/backend
  nextjs:
    build:
      context: ./nextjs
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@mariadb:3306/${DB_NAME}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
        - NEXTAUTH_URL=${NEXTAUTH_URL}
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    container_name: video-ia-nextjs
    restart: always
    environment:
      - DATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@mariadb:3306/${DB_NAME}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - NODE_ENV=production
      - TZ=Europe/Paris
    volumes:
      - uploads_data:/app/public/uploads
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - video_ia_network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Service Nginx pour servir l'application et gérer HTTPS
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: video-ia-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - certbot_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - nginx_cache:/var/cache/nginx
      - uploads_data:/var/www/uploads
      - ./certbot/www:/var/www/html
    depends_on:
      - nextjs
    networks:
      - video_ia_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 60s
      timeout: 10s
      retries: 3

  # Service Certbot pour la gestion des certificats SSL
  certbot:
    build:
      context: ./certbot
      dockerfile: Dockerfile
    container_name: video-ia-certbot
    volumes:
      - certbot_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - ./certbot/www:/var/www/html
    environment:
      - DOMAIN=${DOMAIN}
      - ADDITIONAL_DOMAINS=${ADDITIONAL_DOMAINS}
      - EMAIL=${ADMIN_EMAIL}
      - STAGING=${CERTBOT_STAGING:-0}
    depends_on:
      - nginx
    networks:
      - video_ia_network
    entrypoint: "/scripts/init-certificate.sh"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

networks:
  video_ia_network:
    driver: bridge

volumes:
  db_data:
  certbot_data:
  certbot_www:
  nginx_cache:
  uploads_data: 